version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: islamicnetwork/alquran.cloud
      QUAYIO_IMAGE_NAME: quay.io/islamic-network/alquran.cloud
    docker:
      - image: circleci/buildpack-deps:stretch
  php74:
    docker:
      - image: islamicnetwork/php:7.4-cli
      - image: memcached:1.5
    working_directory: ~/repo
jobs:
  build-app:
    executor: php74
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: composer install -n --prefer-dist
      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}
  push-git-tag:
    docker:
      - image: cibuilds/github
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION="${CIRCLE_BUILD_NUM}"
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ~/repo/
  build-and-publish-docker-image:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Add Version information
          command: |
            echo "commit: ${CIRCLE_SHA1}" > html/VERSION
            echo "tag: ${CIRCLE_TAG}" >> html/VERSION
            echo "branch: ${CIRCLE_BRANCH}" >> html/VERSION
            echo "ci_build: ${CIRCLE_BUILD_NUM}" >> html/VERSION
            echo "ci_workflow: ${CIRCLE_WORKFLOW_ID}" >> html/VERSION
      - run:
          name: Build Production Docker image
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t $IMAGE_NAME:latest .
            echo "Pushing latest tag to Docker Hub..."
            docker push $IMAGE_NAME:latest
            IMAGE_TAG=${CIRCLE_TAG}
            echo "Pushing tag $IMAGE_TAG to Docker Hub..."
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:$IMAGE_TAG
            echo "$QUAYIO_PASSWORD" | docker login quay.io --username "$QUAYIO_USERNAME" --password-stdin
            docker tag $IMAGE_NAME:latest $QUAYIO_IMAGE_NAME:latest
            echo "Pushing latest tag to quay.io..."
            docker push $QUAYIO_IMAGE_NAME:latest
            docker tag $IMAGE_NAME:latest $QUAYIO_IMAGE_NAME:$IMAGE_TAG
            echo "Pushing tag $IMAGE_TAG to quay.io..."
            docker push $QUAYIO_IMAGE_NAME:$IMAGE_TAG

  deploy-docker-tag-dallas:
    executor: docker-publisher
    steps:
      - checkout
      - run:
          name: Install envsubst
          command: |
            sudo apt-get update && sudo apt-get -y install gettext-base
      - run:
          name: Install kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod u+x ./kubectl
      - run:
          name: Deploy Code
          command: |
            curl -o ./.k8s/deploy.sh https://raw.githubusercontent.com/islamic-network/k8s-deployment/master/deploy-dallas.sh
            chmod u+x ./.k8s/deploy.sh
            sh ./.k8s/deploy.sh
  deploy-docker-tag-london:
    executor: docker-publisher
    steps:
      - checkout
      - run:
          name: Install envsubst
          command: |
            sudo apt-get update && sudo apt-get -y install gettext-base
      - run:
          name: Install kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod u+x ./kubectl
      - run:
          name: Deploy Code
          command: |
            curl -o ./.k8s/deploy.sh https://raw.githubusercontent.com/islamic-network/k8s-deployment/master/deploy-london.sh
            chmod u+x ./.k8s/deploy.sh
            sh ./.k8s/deploy.sh
  deploy-docker-tag-singapore:
    executor: docker-publisher
    steps:
      - checkout
      - run:
          name: Install envsubst
          command: |
            sudo apt-get update && sudo apt-get -y install gettext-base
      - run:
          name: Install kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod u+x ./kubectl
      - run:
          name: Deploy Code
          command: |
            curl -o ./.k8s/deploy.sh https://raw.githubusercontent.com/islamic-network/k8s-deployment/master/deploy-singapore.sh
            chmod u+x ./.k8s/deploy.sh
            sh ./.k8s/deploy.sh

workflows:
  version: 2
  build-master:
    jobs:
      - build-app:
          filters:
            branches:
              only: master
      - push-git-tag:
          context: org-global
          requires:
            - build-app
          filters:
            branches:
              only: master
  build-tags:
    jobs:
      - build-app:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - build-and-publish-docker-image:
          context: org-global
          requires:
            - build-app
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy-docker-tag-dallas:
          context: org-global
          requires:
            - build-and-publish-docker-image
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy-docker-tag-london:
          context: org-global
          requires:
            - build-and-publish-docker-image
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy-docker-tag-singapore:
          context: org-global
          requires:
            - build-and-publish-docker-image
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
